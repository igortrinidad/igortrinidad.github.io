{"hash":"e749433ac84b5098191da74833a63bb4dd9fcf94","data":null,"context":{"story":{"title":"Aprendendo Adonis.js - reaproveitando messagens de validação","slug":"aproveitando-codigo-adonis-validator","contents":[{"type":"code","language":"javascript","content":"const Story = {\n  \"title\" : \"Aprendendo Adonis.js - reaproveitando messagens de validação\"\n}"},{"type":"text","content":"Criar validação de forms no backend pode ser uma tarefa bastante repetitiva, então podemos utilizar uma das features da POO para facilitar nosso trabalho, criando traits no JS para tratar as mensagens padrões de erro de validação de inputs com Adonis.js."},{"type":"code","language":"javascript","content":"//StandartMessages.js\nmodule.exports = {\n\n  get validateAll () {\n    return true\n  },\n\n  get messages() {\n    return {\n      \"min\": \"{{ field }}: mínimo de {{ argument.0 }}\",\n      \"required\" : \"{{ field }}: campo obrigatório\"\n    }\n  },\n\n  async fails(errorMessages) {\n    return this.ctx.response.json({ errors: errorMessages.map((error) => error.message) })\n  }\n\n}"}]}}}