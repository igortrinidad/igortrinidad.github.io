{"hash":"5b66ad86e89744d5b4003640bc8ec6d6874304c0","data":null,"context":{"snippet":{"slug":"debugging-without-bugging","title":"Debugar sem BUGAR","description":"Debugar é preciso, as vezes dói  mas é preciso ¯\\_(ツ)_/¯","image":"https://images.pexels.com/photos/3658663/pexels-photo-3658663.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940","contents":[{"type":"code","language":"javascript","content":"const debuggingWithoutBugging = (codeToDo) => {\n  if(codeToDo instanceof Exception) {\n    tryAnotherSolution()\n  }\n}\n\nwhile(codeToDo) {\n  debuggingWithoutBugging(codeToDo)\n}"},{"type":"text","content":"\n      <p>\n      Eu sei, aquele bug danado explodiu na sua cara né minha filha? Inclusive pode ter acontecido hoje mesmo com você enquanto implementa “aquela nova” feature do sistema.\n      </p>\n      <p>\n      Pois é, saiba que você não está sozinho nessa, muito pelo contrário! Essa labuta é diária na vida de qualquer programador.  \n      </p>\n      <p>\n      Mas uma coisa eu posso te garantir, tem <b>SOLUÇÃO</b>!\n\n      <p>\n      Só tem um detalhe importante antes: esse NÃO é manual MacGyver da programação ninja. Não!\n      </p>\n      <p>\n      Provavelmente não encontre aqui a solução direta para o bug enquanto você tentava importar O arquivo <b>'cannot find the motherfucker module'</b>, aquela MEGA query que você fez: <b>'You have an error in your SQL syntax… near products.name at line 356'</b> ou quando a função simplesmente não tava <b>FUNCTIONando</b> na exception:  <b>'funcaoDaPoha is not a function'</b>.\n      </p>\n      <p>\n      Esses e outros erros aconteceram ou acontecem diariamente com todos os programadores, a única coisa que não é muito normal é você escrever uma query de <b>356 linhas</b>, o resto ta de boa. Vamos juntos que já deu certo!\n      </p>\n      <p>\n      Quando comecei a programar PHP, encontrei um blog da linguagem que pregava um lema que não fazia muito sentido para mim na época: <b>“Seja amigo dos erros”</b> (não me lembro o nome do Blog mas era Felipe… ...).\n\n      <p>\n      Eu lia aquela frase e pensava, como assim doido! O trem tem que funcionar! Que merda de 'Call to undefined function funcao_da_poha' ela tá aqui oh, eu to vendo uai! Ficar amigo dos erros o caramba, eu quero é que eles <b>sumam logo daqui</b>!\n      </p>\n      <p>\n      Mas se eles sumissem facilmente eu perderia uma grande oportunidade: a oportunidade de <b>aprender</b>! Pois o processo de <b>DEBUGAR</b> não só resolve o <b>BUG</b> mas te ajuda a exercitar outra grande máxima da programação: <b>“não existe uma maneira correta de resolver um problema”</b>!\n      </p>\n      <p>\n      E a cada <b>tentativa</b> e <b>erro</b> você vai absorvendo as nuances que fazem determinado código <b>funcionar</b> e outros <b>não</b>. Nuances justamente porque até mesmo um caracter pode fazer diferença, ô se faz! Como no dia que fiquei simplesmente 2:30 (duas horas e trinta minutos) olhando estarrecido uma query de exatamente duas linhas para encontrar o “)” que estava faltando.\n      </p>\n      <p>\n      E esse processo doloroso de lidar com uma exception é muito valioso e ensina em uma profundidade ímpar. Pois nem sempre aprendemos com os <b>erros dos outros</b>, às vezes precisamos sentir na pele e nos virarmos por nós mesmos para entendermos porque algo funciona ou não funciona de determinada maneira.\n      </p>\n      <p>\n      Não te disse que você não iria encontrar a solução para seu bug aqui agora, mas talvez você encare seus bugs de uma nova maneira e isso pode fazer diferença no seu dia a dia de código. \n      </p>\n      <p>\n      Deixo vocês com essa dívida técnica e nos vemos no próximo artigo onde vou tentar mostrar alguns passos práticos que sigo para resolver os bugs que insistem em me incomodar.\n      </p>\n      <p>\n      Hasta la vista Dev!\n      </p>\n          \n      "}]}}}