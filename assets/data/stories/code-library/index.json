{"hash":"5b66ad86e89744d5b4003640bc8ec6d6874304c0","data":null,"context":{"snippet":{"slug":"code-library","title":"Biblioteca de códigos","description":"Seus repositórios dizem muito sobre você como profissional","image":"https://images.pexels.com/photos/590493/pexels-photo-590493.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940","contents":[{"type":"code","language":"javascript","content":"const personalCodeLibrary = []"},{"type":"text","content":"\n      <p>\n        Na coquetelaria existe um conceito de biblioteca de sabores que trás a idéia para o bartender ou o mixologista desenvolver um \"estoque\" de infusões, mixers, ervas, xaropes, extratos e tudo quanto é concentrado dos mais diversos tipos de aromas possíveis para serem utilizados nas suas criações, transformando misturas simples em receitas complexas e interessantes.\n      </p>\n      \n      <p>\n        É um conceito super legal e que diz muito não só sobre a técnica em si, mas também sobre o background do profissional. Quanto dever de casa ele fez, portanto quanto investimento intelectual o profissional tem feito em sua carreira.\n      </p>\n      \n      <p>\n        Quando iniciamos uma atividade ou aventuramos em uma nova profissão, como quando comecei a programar. Ainda não temos nossa biblioteca de sabores (ou código no nosso caso) muito bem equipada.\n      </p>\n      \n      <p>\n        Começamos do zero - um livro em branco sem contra capa, sem índice. E mesmo que temos muita informação disponível e acessível na internet, as vezes é difícil pois ainda nem sabemos fazer as perguntas corretas para os problemas que queremos resolver.\n      </p>\n      \n      <p>\n        Todos os profissionais, dos mais e menos experientes passaram por isso e quem quer atingir algum objetivo em sua carreira provavelmente passou ou irá passar.\n      </p>\n      \n      <p>\n        Mas ter uma página em branco também é uma grande oportunidade, a oportunidade da possibilidade. Ali você poderá escrever a sua própria história e nesse caso a sua <b>biblioteca de códigos</b>.\n      </p>\n      \n      <p>\n        Quando começamos a programar ainda não temos muitas referências e experiência em como resolver os problemas que queremos solucionar, mas à medida que vamos progredindo, estudando, lidando com cada exception, solucionando o mesmo problema de 1, 2, 20 maneiras diferentes, nós começamos a entender cada vez mais desse universo mágico da programação e um pouco das suas infinitas possibilidades, ou seja, construímos nossa <b>biblioteca de códigos</b> na prática.\n      </p>\n      \n      <p>\n        Com o passar do tempo você só não sabe como resolver determinados problemas, como provavelmente já tem a solução que você mesmo lidou em um ou outro repositório por aí na sua <b>biblioteca de códigos</b> pessoal.\n      </p> \n      \n      <p>\n        Steve Jobs soube elucidar isso muito bem <a href=”https://www.youtube.com/watch?v=DgfodqUcNhI” target=\"_blank\">neste icônico</a> discurso em 2005:\n      </p>\n\n      <p>\n        <b>“você não pode ligar os pontos olhando para frente, você só pode ligá-los olhando para trás.”</b>\n      </p>\n\n      <p>\n        E para construir a sua própria biblioteca de códigos não tem receita mágica ou atalho, você terá que botar a mão na massa - criar, participar ou colaborar com o máximo possível de projetos que você tiver oportunidade e com o passar do tempo, quando você precisar resolver algum problema específico, você terá toda a sua <b>biblioteca de códigos</b> disponível para consulta, é <b>hora de conectar os pontos</b>.\n      </p>\n      \n      <p>\n        Veja abaixo o discurso de Steve Jobs e não perca tempo, corra para seu terminal e comece agora mesmo a criar a sua própria <b>biblioteca de códigos</b>!\n      </p>\n          \n      "},{"type":"code","language":"javascript","content":"$ mkdir new-project\n$ cd new-project\n$ npm init"},{"type":"code","language":"javascript","content":"class Person{\n  constructor(name, age) {\n    this.name = name\n    this.age = age\n  }\n}\n\nclass Developer extends Person {\n\n  constructor(name, age) {\n    super(name, age)\n  }\n\n  personalCodeLibrary = []\n\n  learnSomethingNew(title, subject) {\n    const newCode = new Code(title, subject)\n    this.personalCodeLibrary.push(new Code(title, subject))\n  }\n}\n\nclass Code {\n  constructor(title, subject) {\n    this.title = title\n    this.subject = subject\n  }\n}\n\nconst me = new Developer('Igor Trindade', '33')\n\nme.learnSomethingNew('Javascript OOP', 'javascript')"},{"type":"text","content":"\n        <iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/DgfodqUcNhI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n      "}]}}}