{"hash":"5b66ad86e89744d5b4003640bc8ec6d6874304c0","data":null,"context":{"snippet":{"slug":"pro-gra-ma-cao","title":"PRO-GRA-MA-ÇÃO","description":"Se podemos simplificar que programar é estabelecer um conjunto de normas que devem ser seguidas pelo computador, porque não utilizar a pro-gra-ma-ção também para facilitar nosso dia a dia como pro-gra-ma-dor","image":"https://images.pexels.com/photos/3243/pen-calendar-to-do-checklist.jpg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940","contents":[{"type":"code","language":"javascript","content":"const developer = new HumanBeing()\n\nwhile(thingsToDo.length) {\n  developer.makeItMoreSimple().doYourStuffs()\n}"},{"type":"text","content":"\n\n      <h1 class=\"text-black\">pro·gra·ma·ção</h1>\n      <p class=\"m-0\">Subs. feminino</p>\n      <p class=\"m-0\">Ato ou efeito de programar, de estabelecer um conjunto de ações a serem executadas.</p>\n      <p>Se podemos simplificar que programar é estabelecer um conjunto de normas que devem ser seguidas pelo computador, porque não utilizar a <b>pro-gra-ma-ção</b> também para facilitar nosso dia a dia como <b>pro-gra-ma-dor</b>?</p>\n      <p>Durante a rotina diária de desenvolvedor podemos executar diversos comandos no terminal, como os comandos abaixo que executo para iniciar o ambiente de desenvolvimento de um projeto ao qual estou trabalhando:</p>\n\n      "},{"type":"code","language":"bash","content":"# Abrir uma nova janela do terminal\n\n# Ir para o diretório do projeto:\ncd ~/Code/meuprojeto/frontend\n\n#Abrir o projeto no Visual Code\ncode .\n\n# Executar build de desenvolvimento\nnpm run serve\n\n# Em outra janela do terminal\n\n# Ir para o diretório da aplicação server do projeto:\ncd ~/Code/meuprojeto/server\n\n# Executar a aplicação de backend\nnode server --dev"},{"type":"text","content":"\n        <p>Tarefas extremamente simples mas que também são extremamente repetitivas.</p>\n        <p>Então se como programadores nos preocupamos tanto com a UX e utilizamos todas as melhores práticas para facilitar a vida de nossos usuários, por que não facilitar também a nossa vida de <b>pro-gra-ma-dor</b>?</p>\n        <p>Pois bem, vamos ao código e simplificar um pouco a rotina de provisionar nosso ambiente de desenvolvimento, configurando todos os comandos e ações em apenas um único comando.</p>\n        <p>Vamos criar o arquivo que irá executar a rotina, no terminal execute os seguintes comandos:</p>\n\n        "},{"type":"code","language":"bash","content":"#Navegue até o diretório onde você quer salvar o arquivo de script que vamos criar\ncd Code/scripts\n\n#Crie o arquivo\ntouch meuprojeto.sh\n\n#Define a permissão de execução ao arquivo\nchmod +x meuprojeto.sh\n\n#Abre o arquivo no Visual Code\ncode ./meuprojeto.sh"},{"type":"text","content":"\n        <p>E no arquivo criado adicione os seguintes comandos*:</p>\n        "},{"type":"code","language":"bash","content":"#meuproject.sh\n#!/usr/bin/env bash\n\necho \"Iniciando ambiente de desenvolvimento\"\necho \"Abrir o projeto no VS Code\"\n\ncode /home/seuusuario/Code/meuprojeto\n\necho \"Abrir uma nova aba do terminal na pasta de frontend e executar a aplicação\"\ngnome-terminal --tab -- /bin/bash -c \"cd /home/seuusuario/Code/meuprojeto/frontend; npm run serve; bash;\"\n\necho \"Abrir uma nova aba do terminal na pasta server do projeto e executar a aplicação\"\ngnome-terminal --tab -- /bin/bash -c \"cd /home/seuusuario/Code/meuprojeto/server; node serve --dev; bash;\"\n\necho \"Aguardando 10 segundos para abrir o chrome com a aplicação frontend\"\n#Este é o tempo que a minha app de frontend demora para ficar pronta\nsleep 10\ngoogle-chrome \"http://localhost:8080\"\n\n#Finalizar a execução do comando\nexit 0"},{"type":"text","content":"\n        <p>Feito isso agora podemos definir um alias (atalho) para nosso comando de setup do ambiente: </p>\n        <p>Abra seu arquivo de source do seu terminal (.bashrc, .profile, .bash_aliases) e adicione o alias para o arquivo que criamos, no meu caso o meu terminal usa o .bashrc como source porém importante os alias em .bash_alias assim eu adiciono meus aliases (atalhos) no arquivo ~/.bash_aliases.</p>\n\n        "},{"type":"code","language":"bash","content":"#.bash_aliases\n#…\nalias meuprojeto=”/home/seuusuario/Code/scripts/meuprojeto.sh”"},{"type":"text","content":"\n        <p>Salve o arquivo e feche todas as janelas do terminal para recarregar o arquivo de fontes novamente e pronto, é só executar <b>“meuprojeto”</b> e pimba! Nosso ambiente de desenvolvimento está provisionado e pronto para fazer o que fazemos melhor: codar! Com apenas um comando no terminal.</p>\n        <p>*É importante lembrar que os comandos exemplificados neste artigo são apenas um exemplo de tarefas que podem ser automatizadas e criado para o ambiente que estou utilizado no momento (Ubuntu 20.04 Focal Fossa) com as aplicações devidamente configuradas <b>*code - Visual Studio Code, *gnome-terminal - terminal / linha de comando e *google-chrome - Google Chrome</b>, portanto você provavelmente deverá ter que realizar algumas modificações para seu ambiente e caminhos relativos do seu projeto.</p>\n        "}]}}}